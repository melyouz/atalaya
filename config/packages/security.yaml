security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            id: App\Security\Infrastructure\Provider\SymfonyUserProvider
    password_hashers:
        App\Users\Domain\Model\User:
            algorithm: auto
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\Infrastructure\Authenticator\SymfonyUsernamePasswordAuthenticator
                - App\Security\Infrastructure\Authenticator\SymfonyJwtAuthenticator
            entry_point: App\Security\Infrastructure\Authenticator\SymfonyUsernamePasswordAuthenticator
        api:
            lazy: true
            stateless: true
            pattern: ^/api

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/users$, methods: [POST], roles: PUBLIC_ACCESS }
        - { path: ^/api/users/.*/confirm$, methods: [PATCH], roles: PUBLIC_ACCESS }
        - { path: ^/api/jwt/token$, methods: [POST], roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: ROLE_USER }
